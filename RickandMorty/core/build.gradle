apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'


android {
    compileSdkVersion AndroidConfig.compileSdk
    buildToolsVersion AndroidConfig.buildTools

    defaultConfig {
        minSdkVersion AndroidConfig.minSdk
        targetSdkVersion AndroidConfig.targetSdk
        versionCode AndroidConfig.versionCode
        versionName AndroidConfig.versionName
        testInstrumentationRunner AndroidConfig.testInstrumentationRunner

        kapt {
            arguments {
                arg("room.schemaLocation", "$projectDir/schemas".toString())
            }
        }
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LGPL2.1'
    }

    kapt {
        correctErrorTypes = true
    }


    dataBinding {
        enabled = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    sourceSets {
        //Dedicated directories for tests written in Kotlin
        test.java.srcDirs += "src/test/kotlin"
        androidTest.java.srcDirs += "src/androidTest/kotlin"
    }

    afterEvaluate {
        android.sourceSets.all { sourceSet ->
            if (!sourceSet.name.startsWith('test') || !sourceSet.name.startsWith('androidTest')) {
                sourceSet.kotlin.setSrcDirs([])
            }
        }
    }

    buildTypes {

        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            //signingConfig signingConfigs.release
        }

        debug {
            //signingConfig signingConfigs.debug
            minifyEnabled false
            versionNameSuffix '-DEBUG'
        }
    }
}

dependencies {
    api fileTree(dir: 'libs', include: ['*.jar'])

    // Kotlin
    api Dependencies.kotlin_stdlib_jdk8
    api Dependencies.kotlinKTX

    // Android X Dependencies.
    implementation Dependencies.androidx_appcompat
    implementation Dependencies.androidx_constraintlayout

    // Dagger Dependencies.
    kapt Dependencies.dagger_compiler
    kapt Dependencies.dagger_processor
    api Dependencies.dagger
    api Dependencies.dagger_android_support
    api Dependencies.dagger_android

    //Navigation
    api Dependencies.navigation_fragment
    api Dependencies.navigation_ui_ktx

    // ReactiveX Dependencies.
    api Dependencies.rxjava2
    api Dependencies.rxandroid2

    // Retrofit.
    api Dependencies.retrofit2

    // RetroFit adapter
    api Dependencies.retrofit2_adapter_rxjava2

    // Retrofit Converter
    api Dependencies.retrofit2_converter_gson

    // Gson
    api Dependencies.gson

    // OkHttp
    api Dependencies.okhttp
    api Dependencies.okhttp_logging_interceptor

    // ReactiveX Dependencies.
    api Dependencies.rxjava2
    api Dependencies.rxandroid2

    //paperdb
    api Dependencies.paperdb

    //Glide
    api Dependencies.glide
    kapt Dependencies.glide_compiler
    api Dependencies.glide_okhttp3

}
